
<div id="sky" style="background-color: #241f2e;margin-top: -70px;z-index:0;"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r71/three.min.js"></script>

<script>

  var container;
  var camera, scene, renderer, particles, geometry, materials = [], parameters, i, h, color, sprite, size;

  var windowHalfX = window.innerWidth / 2;
  var windowHalfY = window.innerHeight / 2;

  init();
  animate();

  function init() {
    container = document.getElementById('sky');

    camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 2000 );
    camera.position.z = 1500;

    scene = new THREE.Scene();
    scene.fog = new THREE.FogExp2( 0x241f2e, 0.001 );

    geometry = new THREE.Geometry();

    sprite = THREE.ImageUtils.loadTexture( "/assets/img/randomstar2.png" );

    for ( i = 0; i < 10000; i ++ ) {
      var vertex = new THREE.Vector3();
      vertex.x = Math.random() * 4000 - 2000;
      vertex.y = Math.random() * 4000 - 2000;
      vertex.z = Math.random() * 4000 - 2000;
      geometry.vertices.push( vertex );
    }

    materials[i] = new THREE.PointCloudMaterial( { size: 5, map: sprite, blending: THREE.AdditiveBlending, depthTest: false, transparent : true } );
    materials[i].color.setHSL( 0.12, 0.39, 0.94 );
    particles = new THREE.PointCloud( geometry, materials[i] );
    scene.add( particles );
    materials[i] = new THREE.PointCloudMaterial( { size: 10, map: sprite, blending: THREE.AdditiveBlending, depthTest: false, transparent : true } );
    materials[i].color.setHSL( 0.12, 0.39, 1.34 );
    particles = new THREE.PointCloud( geometry, materials[i] );
    scene.add( particles );

    renderer = new THREE.WebGLRenderer({ alpha: true });
    renderer.setPixelRatio( window.devicePixelRatio );
    renderer.setSize( window.innerWidth, window.innerHeight );
    container.appendChild( renderer.domElement );
    window.addEventListener( 'resize', onWindowResize, false );
  }

  function onWindowResize() {
    windowHalfX = window.innerWidth / 2;
    windowHalfY = window.innerHeight / 2;
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize( window.innerWidth, window.innerHeight );
  }

  function animate() {
    requestAnimationFrame( animate );
    render();
  }

  function render() {
    var time = Date.now() * 0.00001;
    camera.lookAt( {x: 1000, y: 1000, z: 0});
    for ( i = 0; i < scene.children.length; i ++ ) {
      var object = scene.children[ i ];
      if ( object instanceof THREE.PointCloud ) {
        if (i == 0) {
          object.rotation.z = time;
        } else {
          object.rotation.z = time*2;
        }
      }
    }
    renderer.render( scene, camera );
  }
</script>
